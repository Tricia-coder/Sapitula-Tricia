*/ Sapitula, Tricia Jing Fang

import java.util.Scanner;

public class RetailInventoryManagement {
    public static void main(String[] args) {
        final int NUM_PRODUCTS = 10; // Number of products

        // Arrays to store stock levels and prices
        int[] stockLevels = new int[NUM_PRODUCTS];
        double[] prices = new double[NUM_PRODUCTS];

        Scanner scanner = new Scanner(System.in); // Scanner for user input

        // Collect stock levels and prices from the user
        for (int i = 0; i < NUM_PRODUCTS; i++) {
            System.out.print("Enter stock level for product " + (i + 1) + ": ");
            stockLevels[i] = scanner.nextInt(); // Input stock level
            System.out.print("Enter price for product " + (i + 1) + ": ");
            prices[i] = scanner.nextDouble(); // Input price
        }

        // Calculate total value of inventory
        double totalValue = 0.0;
        for (int i = 0; i < NUM_PRODUCTS; i++) {
            totalValue += stockLevels[i] * prices[i]; // Total value calculation
        }

        // Display total value
        System.out.printf("Total value of all items in stock: $%.2f%n", totalValue);

        // Calculate and display average value
        double averageValue = totalValue / NUM_PRODUCTS;
        System.out.printf("Average value of all items in stock: $%.2f%n", averageValue);

        // Find highest and lowest value products
        int highestValueProductIndex = 0;
        int lowestValueProductIndex = 0;
        double highestValue = stockLevels[0] * prices[0];
        double lowestValue = highestValue;

        for (int i = 1; i < NUM_PRODUCTS; i++) {
            double productValue = stockLevels[i] * prices[i];
            if (productValue > highestValue) {
                highestValue = productValue;
                highestValueProductIndex = i;
            }
            if (productValue < lowestValue) {
                lowestValue = productValue;
                lowestValueProductIndex = i;
            }
        }

        // // Display highest and lowest value products
        System.out.printf("Highest value product: Product %d with a value of $%.2f%n", highestValueProductIndex + 1, highestValue);
        System.out.printf("Lowest value product: Product %d with a value of $%.2f%n", lowestValueProductIndex + 1, lowestValue);

        scanner.close(); // Close the scanner to prevent resource leaks
    }
}
